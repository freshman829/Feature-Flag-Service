basePath: /
definitions:
  models.FeatureFlag:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_enabled:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API for managing feature flags
  title: Feature Flag Service API
  version: "1.0"
paths:
  /api/flags:
    get:
      description: Retrieves all feature flags from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FeatureFlag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all feature flags
      tags:
      - Feature Flags
    post:
      consumes:
      - application/json
      description: Adds a new feature flag to the system
      parameters:
      - description: Feature flag details
        in: body
        name: featureFlag
        required: true
        schema:
          $ref: '#/definitions/models.FeatureFlag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.FeatureFlag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new feature flag
      tags:
      - Feature Flags
  /api/flags/{id}:
    delete:
      description: Deletes a feature flag from the system
      parameters:
      - description: Feature flag ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a feature flag
      tags:
      - Feature Flags
    get:
      description: Retrieves details of a specific feature flag
      parameters:
      - description: Feature flag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FeatureFlag'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a feature flag by ID
      tags:
      - Feature Flags
    put:
      consumes:
      - application/json
      description: Updates the details of an existing feature flag
      parameters:
      - description: Feature flag ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated feature flag details
        in: body
        name: featureFlag
        required: true
        schema:
          $ref: '#/definitions/models.FeatureFlag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FeatureFlag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a feature flag
      tags:
      - Feature Flags
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
swagger: "2.0"
